package edu.cmu.sphinx.decoder.adaptation;

import java.io.IOException;

import edu.cmu.sphinx.decoder.adaptation.clustered.ClusteredDensityFileData;
import edu.cmu.sphinx.decoder.adaptation.clustered.ClustersTransformer;
import edu.cmu.sphinx.linguist.acoustic.tiedstate.Sphinx3Loader;

/**
 * Class used for transforming means using a MLLR transform generated by
 * MllrEstimation class.
 * 
 * @author Bogdan Petcu
 */
public class MllrTransformer {

	private ClustersTransformer transformer;

	public MllrTransformer(Sphinx3Loader loader, Transform transform)
			throws Exception {
		float[][][][] As = new float[1][][][];
		As[0] = transform.getA();
		float[][][] Bs = new float[1][][];
		Bs[0] = transform.getB();
		this.transformer = new ClustersTransformer(loader, 1, As, Bs,
				new ClusteredDensityFileData(loader, 1));
	}
	
	/**
	 * Writes the new adapted means to file.
	 * 
	 * @throws IOException
	 */
	public void createNewMeansFile(String path) throws IOException{
		transformer.createNewMeansFile(path);
	}
	
	/**
	 * Adapts the means.
	 */
	private void adaptMean() throws Exception{
		transformer.applyTransform();
	}
	
	/**
	 * Transforms the acoustic model
	 */
	public void applyTransform() throws Exception {
		this.adaptMean();
	}

}
